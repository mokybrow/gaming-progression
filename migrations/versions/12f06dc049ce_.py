"""empty message

Revision ID: 12f06dc049ce
Revises: d79f52bd2a26
Create Date: 2024-02-25 10:00:18.418614

"""
from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = '12f06dc049ce'
down_revision: str | None = 'd79f52bd2a26'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'playlists',
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('owner_id', sa.Uuid(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('about', sa.String(), nullable=False),
        sa.Column('is_private', sa.Boolean(), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
        sa.ForeignKeyConstraint(
            ['owner_id'],
            ['users.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.add_column('user_lists', sa.Column('list_id', sa.Uuid(), nullable=False))
    op.create_unique_constraint('_user_one_list_uc', 'user_lists', ['user_id', 'list_id'])
    op.drop_constraint('user_lists_owner_id_fkey', 'user_lists', type_='foreignkey')
    op.create_foreign_key(None, 'user_lists', 'playlists', ['list_id'], ['id'])
    op.drop_column('user_lists', 'owner_id')
    op.drop_column('user_lists', 'about')
    op.drop_column('user_lists', 'is_private')
    op.drop_column('user_lists', 'name')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_lists', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('user_lists', sa.Column('is_private', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('user_lists', sa.Column('about', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('user_lists', sa.Column('owner_id', sa.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'user_lists', type_='foreignkey')
    op.create_foreign_key('user_lists_owner_id_fkey', 'user_lists', 'users', ['owner_id'], ['id'])
    op.drop_constraint('_user_one_list_uc', 'user_lists', type_='unique')
    op.drop_column('user_lists', 'list_id')
    op.drop_table('playlists')
    # ### end Alembic commands ###
